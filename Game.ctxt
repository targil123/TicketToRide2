#BlueJ class context
comment0.params=
comment0.target=void\ init()
comment0.text=\n\ This\ method\ initializes\ the\ start\ of\ the\ game\n\ \n\ It\ also\ sets\ up\ several\ important\ instance\ variables\n
comment1.params=
comment1.target=void\ setBoard()
comment1.text=\n\ This\ method\ sets\ up\ the\ board\ and\ other\ images\ that\ are\n\ vital\ for\ the\ game\ to\ run\ smoothly\ and\ make\ sense\n
comment10.params=
comment10.target=void\ refresh()
comment10.text=\n\ Refreshes\ the\ cards\ when\ there\ are\ more\ than\ three\n\ locomotive\ cards\ available.\n
comment11.params=
comment11.target=void\ gameOver()
comment11.text=\n\ handles\ code\ for\ the\ end\ of\ the\ game\n
comment12.params=e\ c
comment12.target=boolean\ isClaimable(Edge,\ Color)
comment13.params=
comment13.target=void\ reset()
comment13.text=\n\ resets\ the\ turn\ for\ the\ specific\ player\n
comment14.params=e\ numFerry
comment14.target=boolean\ enoughCards(Edge,\ int)
comment14.text=\n\ determines\ if\ there\ is\ enough\ cards\ needed\n\ \n\ @param\ \ \ \ \ e\ \ \ \ \ Edge\ in\ questino\n\ @param\ \ \ \ \ numFerry\ \ \ \ \ determines\ how\ many\ Ferry\ route\ pieces\n\ \n\ @return\ \ \ \ \ boolean\ \ \ \ \ true\ if\ possible,\ else\ false\n
comment15.params=e\ id
comment15.target=boolean\ claim(Edge,\ int)
comment15.text=\n\ determines\ if\ an\ edge\ can\ be\ claimed\n\ \n\ @param\ \ \ \ \ e\ \ \ \ \ edge\ in\ question\n\ @param\ \ \ \ \ id\ \ \ \ \ player\n\ \n\ @return\ boolean\ \ \ \ \ true\ if\ possible,\ else\ false\n
comment16.params=p
comment16.target=Player\ getNextPlayer(Player)
comment16.text=\n\ allows\ next\ player\ to\ play\ game\n\ \n\ @param\ \ \ \ \ p\ \ \ \ \ current\ player\n
comment17.params=e
comment17.target=void\ mousePressed(java.awt.event.MouseEvent)
comment17.text=\n\ events\ occuring\ on\ mouse\ pressed\n\ \n\ @param\ \ \ \ \ e\ \ \ \ \ MouseEvent\n
comment18.params=e
comment18.target=void\ mouseMoved(java.awt.event.MouseEvent)
comment18.text=\n\ events\ occuring\ on\ mouse\ moved\n\ \n\ @param\ \ \ \ \ e\ \ \ \ \ MouseEvent\n
comment19.params=e
comment19.target=void\ mouseDragged(java.awt.event.MouseEvent)
comment19.text=\n\ events\ occuring\ on\ mouse\ dragged\n\ \n\ @param\ \ \ \ \ e\ \ \ \ \ MouseEvent\n
comment2.params=e
comment2.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment2.text=\n\ This\ method\ waits\ for\ the\ start\ button\ to\n\ be\ pushed.\ When\ it\ is\ the\ game\ starts\ playing\n\ \n\ @param\ e\ ActionEvent\ \n
comment20.params=e
comment20.target=void\ mouseReleased(java.awt.event.MouseEvent)
comment20.text=\n\ events\ occuring\ on\ mouse\ released\n\ \n\ @param\ \ \ \ \ e\ \ \ \ \ MouseEvent\n
comment21.params=gg
comment21.target=void\ paint(java.awt.Graphics)
comment21.text=\n\ repaints\ all\ images\ that\ need\ to\ be\ redraw\ \n\ after\ board\ is\ clicked\ on\n\ \n\ @param\ \ \ \ \ gg\ \ \ \ \ Graphics\n
comment22.params=g\ currentPlayerNumber
comment22.target=void\ playerTurnController(java.awt.Graphics,\ int)
comment22.text=\n\ Prelimnary\ controller\ for\ the\ player\ turns.\ Changes\ Gaphics\ of\ the\n\ screen\ according\ to\ hows\ turn\ it\ is.\n\ \n\ Items\ printed\ include\:\ \n\ Turn\ identifier\ image,\ player\ destinaiton\ cards\n\ \n\ @param\ g\ Graphic\ object\n\ @param\ currentPlayerNumber\ the\ current\ player\ whose\ turn\ it\ is\n
comment23.params=g
comment23.target=void\ printDestinaitons(java.awt.Graphics)
comment23.text=\n\ This\ method\ prints\ out\ the\ Array\ of\ a\ the\ current\ Player's\n\ destination\ cards\ to\ the\ screen\n\ \n\ @param\ g\ Graphic\ object\n
comment24.params=
comment24.target=void\ launchIntro()
comment24.text=\n\ launches\ the\ beginning\ of\ the\ game\n\ asks\ all\ necessary\ prompt\ questions\n
comment25.params=c
comment25.target=java.lang.String\ colorSelection(boolean[])
comment25.text=\n\ determines\ what\ color\ the\ user\ chose\n\ \n\ @param\ \ \ \ \ c\ \ \ \ \ array\ of\ boolean\n\ @return\ \ \ \ string\ \ \ \ \ chosen\n
comment26.params=playerColor
comment26.target=java.awt.Color\ whichColor(java.lang.String)
comment26.text=\n\ determines\ which\ user\ is\ associated\ with\ which\ color\n\ \n\ @param\ \ \ \ \ playerColor\ \ \ \ \ string\n\ \n\ @return\ \ \ \ \ java.awt.Color\ \ \ \ \ player\ color\n
comment27.params=numDestinationCards\ numRequiredForSelectionLower\ numRequiredForSelectionUpper
comment27.target=java.util.ArrayList\ setUpDestinations(int,\ int,\ int)
comment27.text=\n\ displays\ destination\ cards\ in\ the\ applet\n\ \n\ @param\ \ \ \ \ numDestinationCards\ \ \ \ quantity\ of\ destination\ cards\n\ @param\ \ \ \ \ numrequiredforselectionlower\ \ \ \ \ number\ required\n\ @param\ \ \ \ \ numrequiredforselectionupper\ \ \ \ \ number\ required\n\ \n\ @return\ arraylist<Destinationcard>\ \ \ \ \ \n\ array\ list\ of\ destination\ cards\n
comment28.params=c
comment28.target=java.awt.Image\ getImage(Card)
comment28.text=\n\ associates\ the\ card\ image\ with\ the\ color\n\ \n\ @param\ \ \ \ \ c\ \ \ \ \ card\n\ \n\ @return\ \ \ \ \ image\ \ \ \ image\ of\ card\n
comment3.params=e
comment3.target=void\ mouseEntered(java.awt.event.MouseEvent)
comment3.text=\n\ controls\ events\ when\ mouse\ enters\ the\ window\n\ @param\ e\ MouseEvent\n
comment4.params=e
comment4.target=void\ mouseExited(java.awt.event.MouseEvent)
comment4.text=\n\ controls\ events\ when\ mouse\ exits\ the\ window\n\ @param\ e\ MouseEvent\n
comment5.params=e
comment5.target=java.util.ArrayList\ getOptions(Edge)
comment5.text=\n\ gets\ options\ of\ how\ an\ edge\ can\ be\ claimed\n\ \n\ @param\ e\ Edge\ that\ is\ trying\ to\ be\ claimed\n\ \n\ @return\ ArrayList\ of\ the\ different\ options\n
comment6.params=i
comment6.target=int\ getNumPointsToAdd(int)
comment6.text=\n\ returns\ number\ of\ points\ to\ add\n\ \n\ @param\ \ \ \ \ i\ \ \ \ \ number\ of\ spaces\ per\ route\n\ @return\ \ \ \ \ 0\ \ \ \ \ returns\ 0\n
comment7.params=e
comment7.target=void\ claim(Edge)
comment7.text=\n\ claims\ an\ edge\ for\ the\ player\n\ \n\ @param\ \ \ \ \ e\ \ \ \ \ edge\ to\ be\ claimed\n
comment8.params=p
comment8.target=void\ drawThings(Player)
comment9.params=e
comment9.target=void\ mouseClicked(java.awt.event.MouseEvent)
comment9.text=\n\ determines\ where\ the\ mouse\ is\ clicking\n\ \n\ @param\ \ \ \ \ e\ \ \ \ \ MouseEvent\n
numComments=29
